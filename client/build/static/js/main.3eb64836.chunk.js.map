{"version":3,"sources":["components/Time.tsx","components/TimeWrapper.tsx","types/types.ts","components/MainDisplay.tsx","components/CDItem.tsx","components/CountDownList.tsx","components/Login.tsx","components/SignUp.tsx","components/UserIcon.tsx","components/AddCD.tsx","App.tsx","index.tsx"],"names":["Time","t","type","this","props","sec","Math","floor","className","style","styles","convert","toLocaleUpperCase","Component","TimeWrapper","emailError","MainDisplay","timeId","state","timeRemain","targetDate","calculateTimeDiff","target","test","countdownInterval","bind","getTime","Date","setInterval","prevProps","prevState","snapshot","clearInterval","diff","setState","fontSize","color","title","description","CDItem","cd","item","handleRemove","e","stopPropagation","remove","onClick","handleSwitch","CountDownList","newTitle","newDate","newDest","expand","handleOnAddItem","handleChangeDate","handleChangeTitle","handleChangeDest","handleExpand","event","open","console","log","currentTarget","value","exp","height","width","fontFamily","x","y","list","map","idx","key","Login","email","password","checkEmail","ok","error","handleChange","handleClose","handleSubmit","handleOpen","id","val","ps","preventDefault","checkEmailFormat","axios","post","then","res","login","catch","err","format","Dialog","onClose","DialogTitle","onSubmit","DialogContent","TextField","required","margin","label","fullWidth","onChange","helperText","emailErrorMessage","FormHelperText","DialogActions","Button","SignUp","confirm","username","data","existed","checkPassword","UserIcon","anchorEl","openLogin","openSignUp","handleClick","handleLogout","get","Boolean","Avatar","charAt","Popover","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemIcon","ListItemText","primary","handleOpenClose","hasLogin","iconEl","loginButton","AddCD","handleClickClose","setDateTime","add","date","time","setDate","dest","autoFocus","setTitle","utils","DateFnsUtils","disableToolbar","variant","minDate","KeyboardButtonProps","multiline","setDest","d","month","getMonth","day","getDate","year","getFullYear","length","join","h","getHours","m","getMinutes","App","background","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","user","defaultCd","openAdd","newCD","handleAddWindow","handleAdd","handleLogin","getData","cdList","isLogin","currTargetDate","newTargetDate","filter","i","push","put","newList","handleSwitchMainDisplay","defaults","withCredentials","baseURL","process","REACT_APP_BASE_URL","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3eb64836.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport '../stylesheets/style.css';\r\n\r\ntype StateType = {}\r\ntype PropsType = {type: \"day\" | \"hour\" | \"min\" | \"sec\", sec: number, styles?: {}}\r\n\r\nclass Time extends Component<PropsType, StateType> {\r\n\r\n    convert(): string {\r\n        const type = this.props.type;\r\n        const sec = this.props.sec;\r\n        let t;\r\n        switch(type) {\r\n            case \"day\":\r\n                // return Math.floor(sec / 86400) + \"\";\r\n                return Math.floor(sec / (3600 * 24)) + '';\r\n            case \"hour\":\r\n                // t = Math.floor((sec % 86400) / 3600);\r\n                t = Math.floor(sec % (3600 * 24) / 3600);\r\n                return t < 10 ? \"0\" + t : t + '';\r\n            case \"min\":\r\n                // t = Math.floor((sec % (86400 * 3600)) / 60);\r\n                t = Math.floor(sec % 3600 / 60);\r\n                return t < 10 ? \"0\" + t : t + '';\r\n            case \"sec\":\r\n                // t = Math.floor((sec % (86400 * 3600 * 60)) / 60);\r\n                t = Math.floor(sec % 60);\r\n                return t < 10 ? \"0\" + t : t + '';\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={'time'}>\r\n                <div className={'time-num'} style={this.props.styles}>\r\n                    {this.convert()}\r\n                </div>\r\n                <div className={'time-label'}>\r\n                    {this.props.type.toLocaleUpperCase()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Time;","import Time from \"./Time\";\r\nimport React from \"react\";\r\n\r\nexport default function TimeWrapper(props: Readonly<{sec: number, styles?: {}}>) {\r\n    const t = props.sec;\r\n\r\n    return (\r\n        <>\r\n            <Time type={\"day\"} sec={t}/>\r\n            <Time type={\"hour\"} sec={t} styles={props.styles}/>\r\n            <Time type={\"min\"} sec={t}/>\r\n            <Time type={\"sec\"} sec={t} styles={props.styles}/>\r\n        </>\r\n    );\r\n}","export type CDObj = {target: Date | null, value?: string | null | undefined, title: string, description: string};\r\nexport enum emailError {ok, existed, format}\r\nexport type User = {username: string, email: string, list: Array<CDObj>, defaultCd: CDObj | null}","import React, { Component } from 'react';\r\n\r\nimport '../stylesheets/style.css';\r\n\r\nimport {CDObj} from \"../types/types\";\r\nimport TimeWrapper from \"./TimeWrapper\";\r\n\r\ntype PropsType = { targetDate: CDObj | null}\r\ntype StateType = { timeRemain: number, test: string }\r\n\r\nclass MainDisplay extends Component<PropsType, StateType> {\r\n\r\n    private timeId: NodeJS.Timeout | undefined;\r\n    constructor(props: Readonly<PropsType>) {\r\n        super(props);\r\n        this.state = {\r\n            timeRemain: this.props.targetDate === null ? 0 : this.calculateTimeDiff(this.props.targetDate.target),\r\n            test: \"\"\r\n        };\r\n        this.countdownInterval = this.countdownInterval.bind(this);\r\n    }\r\n\r\n    calculateTimeDiff(target: Date | null): number {\r\n        if (target === null) return 0;\r\n        return Math.floor((target.getTime() - new Date().getTime()) / 1000);\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        if (this.props.targetDate === null) {\r\n            return;\r\n        }\r\n        this.timeId = setInterval(this.countdownInterval, 1000);\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<StateType>, snapshot?: any): void {\r\n        if (this.props.targetDate === null) return;\r\n        if (prevProps !== this.props) {\r\n            if (this.timeId) {\r\n                clearInterval(this.timeId);\r\n            }\r\n            this.timeId = setInterval(this.countdownInterval, 1000);\r\n        }\r\n    }\r\n\r\n    countdownInterval() {\r\n        let diff = this.props.targetDate === null ? 0 : this.calculateTimeDiff(this.props.targetDate.target);\r\n        if (diff <= 0) {\r\n            diff = 0;\r\n            this.setState({timeRemain: diff});\r\n            if (this.timeId) {\r\n                clearInterval(this.timeId);\r\n            }\r\n        }\r\n        this.setState({timeRemain: diff});\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.timeId) {\r\n            clearInterval(this.timeId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const t = this.state.timeRemain;\r\n        return (\r\n            <div>\r\n                <div className={\"main-countdown\"}>\r\n                    <TimeWrapper sec={t} styles={{fontSize: \"13vw\", color: \"#4e4e4e\"}}/>\r\n                </div>\r\n                <div className={\"main-title\"}>\r\n                    { this.props.targetDate === null ? \"\" : this.props.targetDate.title }\r\n                </div>\r\n                <div className={\"main-desc\"}>\r\n                    { this.props.targetDate === null ? \"\" : this.props.targetDate.description }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainDisplay;","import React, {Component, SyntheticEvent} from 'react';\r\n\r\nimport '../stylesheets/style.css';\r\nimport {CDObj} from \"../types/types\";\r\nimport TimeWrapper from \"./TimeWrapper\";\r\n\r\ntype PropsType = { item: CDObj, handleSwitch: (newTargetDate: CDObj) => void, remove: (title: string) => void};\r\ntype StateType = { cd: number};\r\n\r\nclass CDItem extends Component<PropsType, StateType> {\r\n    private timeId: NodeJS.Timeout | undefined;\r\n\r\n    constructor(props: Readonly<PropsType>) {\r\n        super(props);\r\n        this.state = {\r\n            cd: this.calculateTimeDiff(this.props.item.target),\r\n        };\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n    }\r\n\r\n    calculateTimeDiff(target: Date | null): number {\r\n        if (target === null) return 0;\r\n        return Math.floor((target.getTime() - new Date().getTime()) / 1000);\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.timeId = setInterval(() => {\r\n            let diff = this.calculateTimeDiff(this.props.item.target);\r\n            if (diff <= 0) {\r\n                diff = 0;\r\n                this.setState({cd: diff});\r\n                if (this.timeId) {\r\n                    clearInterval(this.timeId);\r\n                }\r\n            }\r\n            this.setState({cd: diff});\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount(): void {\r\n        if (this.timeId) {\r\n            clearInterval(this.timeId);\r\n        }\r\n    }\r\n\r\n    handleRemove(e: SyntheticEvent) {\r\n        e.stopPropagation();\r\n        this.props.remove(this.props.item.title);\r\n    }\r\n\r\n    render(): React.ReactElement | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        return (\r\n            <li className={\"cd-list-item glass\"} onClick={() => this.props.handleSwitch(this.props.item)}>\r\n                <div className={\"cd-list-item-content\"}>\r\n                    <div className={\"title\"}>{this.props.item.title}</div>\r\n                    <div className={\"cd\"}>\r\n                        <TimeWrapper sec={this.state.cd} styles={{fontSize: \"15px\"}}/>\r\n                    </div>\r\n                </div>\r\n                <div className={\"remove\"} onClick={this.handleRemove}>-</div>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CDItem;","import React, {Component} from 'react';\r\n\r\nimport CDItem from \"./CDItem\";\r\nimport '../stylesheets/style.css';\r\n\r\nimport {CDObj} from \"../types/types\";\r\n\r\ntype PropsType = { list: Array<CDObj>, handleSwitch: (newTargetDate: CDObj) => void, open: (open: boolean) => void, remove: (title: string) => void };\r\ntype StateType = { newTitle: string, newDate: Date, newDest: string, expand: boolean };\r\n\r\nclass CountDownList extends Component<PropsType, StateType> {\r\n    constructor(props: Readonly<PropsType>) {\r\n        super(props);\r\n        this.state = {\r\n            newTitle: \"\",\r\n            newDate: new Date(),\r\n            newDest: \"\",\r\n            expand: true,\r\n        };\r\n        this.handleOnAddItem = this.handleOnAddItem.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\r\n        this.handleChangeDest = this.handleChangeDest.bind(this);\r\n        this.handleExpand = this.handleExpand.bind(this);\r\n    }\r\n\r\n    handleOnAddItem(event: React.SyntheticEvent) {\r\n        this.props.open(true);\r\n    }\r\n\r\n    handleChangeTitle(e: React.ChangeEvent<HTMLInputElement>) {\r\n        console.log(this.state.newTitle);\r\n        this.setState({newTitle: e.currentTarget.value})\r\n    }\r\n\r\n    handleChangeDate(e: React.FormEvent<HTMLInputElement>) {\r\n        this.setState({newDate: new Date(e.currentTarget.value)});\r\n    }\r\n\r\n    handleChangeDest(e: React.FormEvent<HTMLInputElement>) {\r\n        this.setState({newDest: e.currentTarget.value});\r\n    }\r\n\r\n    handleExpand(e: React.SyntheticEvent) {\r\n        this.setState({expand: !this.state.expand});\r\n    }\r\n\r\n    render(): React.ReactElement | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        const exp = this.state.expand;\r\n        return (\r\n            <div className={\"glass \" + (exp ? \"cd-list-container\" : \"cd-list-container-hide\")}>\r\n                <span className={\"cd-list-expand\"} onClick={this.handleExpand}>\r\n                    <svg height={\"30\"} width={\"30\"}>\r\n                        <text fontSize={\"30\"} fontFamily={\"Fredoka One, cursive;\"} x={\"6\"} y={\"25\"}>\r\n                            {exp ? \">\" : \"<\"}\r\n                        </text>\r\n                    </svg>\r\n                </span>\r\n                <span className={\"cd-list\"}>\r\n                    <ul>\r\n                        <li className={\"add glass\"} onClick={this.handleOnAddItem}>+</li>\r\n                        {this.props.list && this.props.list.map((item, idx) => {\r\n                            return <CDItem key={idx} item={item} handleSwitch={this.props.handleSwitch} remove={this.props.remove}/>\r\n                        })}\r\n                    </ul>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CountDownList;","import React, {ChangeEvent, Component, SyntheticEvent} from 'react';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, FormHelperText} from \"@material-ui/core\";\r\nimport {emailError} from \"../types/types\";\r\nimport axios from 'axios';\r\n\r\ntype StateType = {email: string, password: string, checkEmail: emailError, error: boolean}\r\ntype PropsType = {open: boolean, handleOpen: (open: boolean) => void, login: (login: boolean) => void}\r\n\r\nclass Login extends Component<PropsType, StateType> {\r\n    constructor(props: Readonly<PropsType>) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            checkEmail: emailError.ok,\r\n            error: false\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({email: \"\", password: \"\", checkEmail: emailError.ok, error: false});\r\n        this.props.handleOpen(false);\r\n    }\r\n\r\n    handleChange(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n        const id = e.target.id;\r\n        const val = e.target.value;\r\n        this.setState(ps => ({...ps, [id]: val,}));\r\n    }\r\n\r\n    handleSubmit(e: SyntheticEvent) {\r\n        e.preventDefault();\r\n        if (!Login.checkEmailFormat(this.state.email)) {\r\n            this.setState({checkEmail: emailError.format});\r\n            return;\r\n        }\r\n        axios.post('/login', {\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n        }).then(res => {\r\n            this.props.login(true);\r\n            this.handleClose();\r\n        }).catch(err => {\r\n            this.setState({error: true});\r\n        });\r\n    }\r\n\r\n    static checkEmailFormat(email: string): boolean {\r\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\r\n    }\r\n\r\n    emailErrorMessage() {\r\n        const checkEmail = this.state.checkEmail;\r\n        switch (checkEmail) {\r\n            case emailError.format:\r\n                return \"Please enter a correct email address\";\r\n            case emailError.ok:\r\n                return \"\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const open = this.props.open;\r\n        return (\r\n            <Dialog open={open} onClose={this.handleClose}>\r\n                <DialogTitle>Log in</DialogTitle>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            required\r\n                            error={this.state.checkEmail !== emailError.ok}\r\n                            margin={\"dense\"}\r\n                            id={\"email\"}\r\n                            label={\"Email\"}\r\n                            type={\"email\"}\r\n                            fullWidth\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            helperText={this.emailErrorMessage()}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            margin={\"dense\"}\r\n                            id={\"password\"}\r\n                            label={\"Password\"}\r\n                            type={\"password\"}\r\n                            fullWidth\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <FormHelperText\r\n                            error={true}\r\n                            margin={\"dense\"}\r\n                        >\r\n                            {this.state.error ? \"Incorrect email or password\" : \"\"}\r\n                        </FormHelperText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Cancel\r\n                        </Button>\r\n                        <Button type={\"submit\"} color=\"primary\">\r\n                            Log in\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {ChangeEvent, Component, SyntheticEvent} from 'react';\r\nimport axios from 'axios';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\r\nimport {emailError} from \"../types/types\";\r\n\r\ntype StateType = {email: string, password: string, confirm: string, username: string, checkEmail: emailError}\r\ntype PropsType = {open: boolean, handleOpen: (open: boolean) => void, login: (login: boolean) => void}\r\n\r\nclass SignUp extends Component<PropsType, StateType> {\r\n    constructor(props: Readonly<PropsType>) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            confirm: \"\",\r\n            username: \"\",\r\n            checkEmail: emailError.ok,\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({email: \"\", password: \"\", confirm: \"\", username: \"\"});\r\n        this.props.handleOpen(false);\r\n    }\r\n\r\n    handleChange(e: ChangeEvent<HTMLInputElement>): void {\r\n        const id = e.target.id;\r\n        const val = e.target.value;\r\n        if (id === \"email\" ){\r\n            if (!SignUp.checkEmailFormat(val)) {\r\n                this.setState({checkEmail: emailError.format});\r\n            } else {\r\n                this.setState({checkEmail: emailError.ok});\r\n            }\r\n        }\r\n        this.setState((ps) => ({...ps, [id]: val,}));\r\n    }\r\n\r\n    handleSubmit(e: SyntheticEvent) {\r\n        e.preventDefault();\r\n        const data = this.state;\r\n        if (data.email === \"\" || data.username === \"\" || data.password === \"\") {\r\n            return;\r\n        }\r\n        if (data.password !== data.confirm || data.checkEmail !== emailError.ok) {\r\n            return;\r\n        }\r\n        axios.post(\"/sign-up\", {\r\n            email: data.email,\r\n            password: data.password,\r\n            username: data.username\r\n        }).then((res) => {\r\n            this.props.login(true);\r\n            this.handleClose();\r\n        }).catch(err => {\r\n            this.setState({checkEmail: emailError.format});\r\n        });\r\n    }\r\n\r\n    static checkEmailFormat(email: string): boolean {\r\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\r\n    }\r\n\r\n    emailErrorMessage() {\r\n        const checkEmail = this.state.checkEmail;\r\n        switch (checkEmail) {\r\n            case emailError.existed:\r\n                return \"Email already existed\";\r\n            case emailError.format:\r\n                return \"Please enter a correct email address\";\r\n            case emailError.ok:\r\n                return \"\";\r\n            default:\r\n                return \"\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const open = this.props.open;\r\n        const checkPassword = (this.state.confirm !== \"\" && this.state.password !== this.state.confirm);\r\n        const checkEmail = this.state.checkEmail;\r\n        return (\r\n            <Dialog open={open} onClose={this.handleClose}>\r\n                <DialogTitle>Log in</DialogTitle>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            required\r\n                            margin={\"dense\"}\r\n                            id={\"username\"}\r\n                            label={\"User name\"}\r\n                            type={\"text\"}\r\n                            fullWidth\r\n                            value={this.state.username}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            error={checkEmail !== emailError.ok}\r\n                            margin={\"dense\"}\r\n                            id={\"email\"}\r\n                            label={\"Email\"}\r\n                            type={\"email\"}\r\n                            fullWidth\r\n                            value={this.state.email}\r\n                            onChange={this.handleChange}\r\n                            helperText={this.emailErrorMessage()}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            margin={\"dense\"}\r\n                            id={\"password\"}\r\n                            label={\"Password\"}\r\n                            type={\"password\"}\r\n                            fullWidth\r\n                            value={this.state.password}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            required\r\n                            error={checkPassword}\r\n                            margin={\"dense\"}\r\n                            id={\"confirm\"}\r\n                            label={\"Confirm password\"}\r\n                            type={\"password\"}\r\n                            fullWidth\r\n                            value={this.state.confirm}\r\n                            onChange={this.handleChange}\r\n                            helperText={checkPassword ? \"Password does not match\" : \"\"}\r\n                        />\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                                Cancel\r\n                            </Button>\r\n                        <Button type={'submit'} color=\"primary\">\r\n                            Sign Up\r\n                        </Button>\r\n                    </DialogActions>\r\n                </form>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Login from './Login';\r\nimport axios from 'axios';\r\n\r\nimport '../stylesheets/style.css';\r\nimport {Button, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SignUp from \"./SignUp\";\r\n\r\ntype StateType = { anchorEl: HTMLImageElement | null, openLogin: boolean, openSignUp: boolean }\r\ntype PropsType = { hasLogin: boolean, login: (hasLogin: boolean) => void, username: string, email: string }\r\n\r\nclass UserIcon extends Component<PropsType, StateType> {\r\n    constructor(props: Readonly<PropsType>) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            openLogin: false,\r\n            openSignUp: false,\r\n        };\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    handleClick(e: React.MouseEvent<HTMLImageElement>) {\r\n        this.setState({anchorEl: e.currentTarget});\r\n    }\r\n\r\n    handleClose() {\r\n        this.setState({anchorEl: null});\r\n    }\r\n\r\n    handleLogout() {\r\n        axios.get('/logout')\r\n            .then(res => {\r\n                this.props.login(false)\r\n            }).catch(err => {\r\n                console.log(err);\r\n        });\r\n    }\r\n\r\n    iconEl() {\r\n        const open = Boolean(this.state.anchorEl);\r\n        return (\r\n            <div>\r\n                <Avatar onClick={this.handleClick}>{this.props.username.charAt(0)}</Avatar>\r\n                <Popover open={open}\r\n                         anchorEl={this.state.anchorEl}\r\n                         onClose={this.handleClose}\r\n                         anchorOrigin={{\r\n                             vertical: \"center\",\r\n                             horizontal: \"right\",\r\n                         }}\r\n                         transformOrigin={{\r\n                             vertical: \"top\",\r\n                             horizontal: \"left\",\r\n                         }}\r\n                >\r\n                    <List>\r\n                        <ListItem button onClick={this.handleLogout}>\r\n                            <ListItemIcon>\r\n                                <ExitToAppIcon fontSize={\"small\"}/>\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={\"Sign out\"} />\r\n                        </ListItem>\r\n                    </List>\r\n                </Popover>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleOpenClose(key: string, open: boolean) {\r\n        this.setState(ps => ({\r\n            ...ps,\r\n            [key]: open,\r\n        }));\r\n    }\r\n\r\n    loginButton() {\r\n        return (\r\n            <div>\r\n                <Button onClick={(e) => {e.stopPropagation(); this.setState({openLogin: true})}}>Log in</Button>\r\n                <Login open={this.state.openLogin} handleOpen={this.handleOpenClose.bind(this, \"openLogin\")} login={this.props.login}/>\r\n                <Button onClick={(e) => {e.stopPropagation(); this.setState({openSignUp: true})}}>Sign up</Button>\r\n                <SignUp open={this.state.openSignUp} handleOpen={this.handleOpenClose.bind(this, \"openSignUp\")} login={this.props.login}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"user-icon\"}>\r\n                {this.props.hasLogin ? this.iconEl() : this.loginButton()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserIcon;","import React, {Component, SyntheticEvent} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardTimePicker,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\n\r\ntype PropsType = {title: string, setTitle: (title:string)=>void,\r\n    date: Date | null, setDate: (date: Date | null, value?: string | null | undefined) => void,\r\n    dest: string, setDest: (dest: string) => void,\r\n    open: boolean, handleOpenClose: (open: boolean) => void,\r\n    add: () => void\r\n}\r\ntype StateType = {}\r\n\r\nclass AddCD extends Component<PropsType, StateType> {\r\n\r\n    constructor(props: Readonly<PropsType>) {\r\n        super(props);\r\n        this.handleClickClose = this.handleClickClose.bind(this);\r\n        this.setDateTime = this.setDateTime.bind(this);\r\n        this.add = this.add.bind(this);\r\n    }\r\n\r\n    handleClickClose() {\r\n        this.props.handleOpenClose(false);\r\n    }\r\n\r\n    static formatDate(date: Date | null): string {\r\n        if (date === null) return \"\";\r\n        let d = date,\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    static formatTime(date: Date | null): string {\r\n        if (date === null) return \"\";\r\n        const h = date.getHours();\r\n        const m = date.getMinutes();\r\n        return (h < 10 ? \"0\" + h : h) + \":\" + (m < 10 ? \"0\" + m : m);\r\n    }\r\n\r\n    setDateTime(date: string, time: string): void {\r\n        this.props.setDate(new Date(date + \" \" + time));\r\n    }\r\n\r\n    add(e: SyntheticEvent) {\r\n        e.preventDefault();\r\n        this.props.add();\r\n        this.props.handleOpenClose(false);\r\n    }\r\n\r\n    render(): React.ReactElement | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\r\n        const open = this.props.open;\r\n        const title = this.props.title;\r\n        const date = this.props.date;\r\n        const dest = this.props.dest;\r\n        return (\r\n            <div>\r\n                <Dialog open={open} onClose={this.handleClickClose}>\r\n                    <DialogTitle id={\"add-new-countdown\"}>Add new count down</DialogTitle>\r\n                    <form onSubmit={this.add}>\r\n                        <DialogContent>\r\n                            <TextField\r\n                                autoFocus\r\n                                margin={\"dense\"}\r\n                                id={\"title\"}\r\n                                label={\"Count down for\"}\r\n                                type={\"text\"}\r\n                                fullWidth\r\n                                required\r\n                                value={title}\r\n                                onChange={(e) => this.props.setTitle(e.target.value)}\r\n                            />\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                <KeyboardDatePicker\r\n                                    disableToolbar\r\n                                    variant=\"inline\"\r\n                                    format=\"MM/dd/yyyy\"\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-inline\"\r\n                                    label=\"Date picker inline\"\r\n                                    minDate={new Date()}\r\n                                    value={this.props.date}\r\n                                    onChange={this.props.setDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                />\r\n                                <KeyboardTimePicker\r\n                                    margin=\"normal\"\r\n                                    variant=\"inline\"\r\n                                    id=\"time-picker\"\r\n                                    label=\"Time picker\"\r\n                                    value={this.props.date}\r\n                                    onChange={this.props.setDate}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change time',\r\n                                    }}\r\n                                />\r\n                            </MuiPickersUtilsProvider>\r\n                            <TextField\r\n                                margin={\"dense\"}\r\n                                id={\"dest\"}\r\n                                type={\"test\"}\r\n                                label={\"Description\"}\r\n                                multiline\r\n                                fullWidth\r\n                                value={dest}\r\n                                onChange={(e) => this.props.setDest(e.target.value)}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.handleClickClose} color={\"primary\"}>\r\n                                Cancel\r\n                            </Button>\r\n                            <Button type={'submit'} color={\"primary\"}>\r\n                                Ok\r\n                            </Button>\r\n                        </DialogActions>\r\n                    </form>\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCD;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport MainDisplay from \"./components/MainDisplay\";\r\nimport CountDownList from \"./components/CountDownList\";\r\nimport UserIcon from \"./components/UserIcon\";\r\n\r\nimport './stylesheets/style.css';\r\n\r\nimport {CDObj, User} from './types/types';\r\nimport AddCD from \"./components/AddCD\";\r\n\r\ntype StateType = { user: User, newCD: CDObj, openAdd: boolean, login: boolean }\r\nclass App extends Component<{}, StateType> {\r\n    constructor(props: Readonly<{}>) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: \"\",\r\n                email: \"\",\r\n                list: [],\r\n                defaultCd: null,\r\n            },\r\n            openAdd: false,\r\n            newCD: {title: \"\", target: new Date(), description: \"\"},\r\n            login: false\r\n        };\r\n        this.handleAddWindow = this.handleAddWindow.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.getData = this.getData.bind(this);\r\n        this.handleRemove = this.handleRemove.bind(this);\r\n    }\r\n\r\n    componentDidMount(): void {\r\n        this.getData();\r\n    }\r\n\r\n    getData() {\r\n        axios.get('/api/get-data')\r\n            .then(res => {\r\n                const d = res.data;\r\n                const defaultCd = d.defaultCd === null ? null : {...d.defaultCd, target: new Date(d.defaultCd.target)};\r\n                this.setState({\r\n                    user: {\r\n                        username: d.username,\r\n                        email: d.email,\r\n                        defaultCd: defaultCd,\r\n                        list: d.cdList.map((item: CDObj) => ({...item, target: item.target})),\r\n                    },\r\n                    login: d.isLogin\r\n                });\r\n            }).catch(err => {\r\n            console.error(err);\r\n        });\r\n    }\r\n\r\n    handleAddWindow(open: boolean) {\r\n        this.setState({openAdd: open, newCD: {title: \"\", target: new Date(), description: \"\"}});\r\n    }\r\n\r\n    async handleSwitchMainDisplay(currTargetDate: CDObj | null, newTargetDate: CDObj) {\r\n        if (currTargetDate === null) return;\r\n        const user = this.state.user;\r\n        const list = user.list.filter(i => i !== newTargetDate);\r\n        list.push(currTargetDate);\r\n        this.setState({\r\n            user: {\r\n                ...user,\r\n                list: list,\r\n                defaultCd: newTargetDate,\r\n            }\r\n        });\r\n        try {\r\n            await axios.put('/api/add', {item: currTargetDate});\r\n            await axios.put('/api/remove', {title: newTargetDate.title});\r\n            await axios.put('/api/set-default', {defaultCd: newTargetDate});\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    async handleAdd() {\r\n        const user = this.state.user;\r\n        if (user.defaultCd === null) {\r\n            this.setState({user: {...user, defaultCd: this.state.newCD}});\r\n            try {\r\n                await axios.put('/api/set-default', {defaultCd: this.state.newCD});\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return;\r\n        }\r\n        const newList = [...user.list, this.state.newCD];\r\n        this.setState({user: {...user, list: newList}});\r\n        try {\r\n            await axios.put('/api/add', {item: this.state.newCD})\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    handleRemove(title: string) {\r\n        const newList = this.state.user.list.filter((i) => title !== i.title);\r\n        this.setState({user: {...this.state.user, list: newList}});\r\n        axios.put('/api/remove', {\r\n            title: title\r\n        }).catch(err => console.error(err));\r\n    }\r\n\r\n    handleLogin(login: boolean) {\r\n        if (login === true) {\r\n            this.getData();\r\n        } else if (login === false) {\r\n            this.setState({user: {username: \"\", email: \"\", defaultCd: null, list: []}});\r\n        }\r\n        this.setState({login: login});\r\n    }\r\n\r\n    background = {\r\n        backgroundImage: 'url(./bg.JPG)',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n    };\r\n\r\n    render() {\r\n        const newCD = this.state.newCD;\r\n        const user = this.state.user;\r\n        return (\r\n            <div className={\"app-container\"} style={this.background}>\r\n                <UserIcon hasLogin={this.state.login} login={this.handleLogin} username={user.username} email={user.email}/>\r\n                <MainDisplay targetDate={user.defaultCd}/>\r\n                <CountDownList\r\n                    list={user.list}\r\n                    handleSwitch={this.handleSwitchMainDisplay.bind(this, user.defaultCd)}\r\n                    open={this.handleAddWindow}\r\n                    remove={this.handleRemove}\r\n                />\r\n                <AddCD title={newCD.title}  setTitle={(t) => {this.setState({newCD: {...newCD, title: t}})}}\r\n                       date={newCD.target} setDate={(d) => {this.setState({newCD: {...newCD, target: d}})}}\r\n                       dest={newCD.description} setDest={(d) => this.setState({newCD: {...newCD, description: d}})}\r\n                       open={this.state.openAdd} handleOpenClose={this.handleAddWindow}\r\n                       add={this.handleAdd}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from 'axios';\r\nimport App from './App';\r\n\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}