{"version":3,"sources":["components/Time.tsx","components/TimeWrapper.tsx","types/types.ts","components/MainDisplay.tsx","components/CDItem.tsx","components/CountDownList.tsx","components/Login.tsx","components/SignUp.tsx","components/UserIcon.tsx","components/AddCD.tsx","App.tsx","index.tsx"],"names":["Time","t","type","this","props","sec","Math","floor","className","style","styles","convert","toLocaleUpperCase","Component","TimeWrapper","emailError","MainDisplay","timeId","state","timeRemain","targetDate","calculateTimeDiff","target","test","countdownInterval","bind","getTime","Date","setInterval","prevProps","prevState","snapshot","clearInterval","diff","setState","fontSize","color","title","description","CDItem","cd","item","handleRemove","e","stopPropagation","remove","onClick","handleSwitch","CountDownList","newTitle","newDate","newDest","expand","handleOnAddItem","handleChangeDate","handleChangeTitle","handleChangeDest","handleExpand","event","open","console","log","currentTarget","value","exp","height","width","fontFamily","x","y","list","map","idx","key","Login","email","password","checkEmail","ok","error","handleChange","handleClose","handleSubmit","handleOpen","id","val","ps","preventDefault","checkEmailFormat","axios","post","then","res","login","catch","err","format","Dialog","onClose","DialogTitle","onSubmit","DialogContent","TextField","required","margin","label","fullWidth","onChange","helperText","emailErrorMessage","FormHelperText","DialogActions","Button","SignUp","confirm","username","data","existed","checkPassword","UserIcon","anchorEl","openLogin","openSignUp","handleClick","handleLogout","get","Boolean","Avatar","charAt","Popover","anchorOrigin","vertical","horizontal","transformOrigin","List","ListItem","button","ListItemIcon","ListItemText","primary","handleOpenClose","hasLogin","iconEl","loginButton","AddCD","handleClickClose","setDateTime","add","date","time","setDate","dest","autoFocus","setTitle","formatDate","formatTime","multiline","setDest","d","month","getMonth","day","getDate","year","getFullYear","length","join","h","getHours","m","getMinutes","App","user","defaultCd","openAdd","newCD","handleAddWindow","handleAdd","handleLogin","getData","cdList","isLogin","currTargetDate","newTargetDate","filter","i","push","put","newList","handleSwitchMainDisplay","defaults","withCredentials","baseURL","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a30aee8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../stylesheets/style.css';\n\ntype StateType = {}\ntype PropsType = {type: \"day\" | \"hour\" | \"min\" | \"sec\", sec: number, styles?: {}}\n\nclass Time extends Component<PropsType, StateType> {\n\n    convert(): string {\n        const type = this.props.type;\n        const sec = this.props.sec;\n        let t;\n        switch(type) {\n            case \"day\":\n                // return Math.floor(sec / 86400) + \"\";\n                return Math.floor(sec / (3600 * 24)) + '';\n            case \"hour\":\n                // t = Math.floor((sec % 86400) / 3600);\n                t = Math.floor(sec % (3600 * 24) / 3600);\n                return t < 10 ? \"0\" + t : t + '';\n            case \"min\":\n                // t = Math.floor((sec % (86400 * 3600)) / 60);\n                t = Math.floor(sec % 3600 / 60);\n                return t < 10 ? \"0\" + t : t + '';\n            case \"sec\":\n                // t = Math.floor((sec % (86400 * 3600 * 60)) / 60);\n                t = Math.floor(sec % 60);\n                return t < 10 ? \"0\" + t : t + '';\n        }\n    }\n\n    render() {\n        return (\n            <div className={'time'}>\n                <div className={'time-num'} style={this.props.styles}>\n                    {this.convert()}\n                </div>\n                <div className={'time-label'}>\n                    {this.props.type.toLocaleUpperCase()}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Time;","import Time from \"./Time\";\nimport React from \"react\";\n\nexport default function TimeWrapper(props: Readonly<{sec: number, styles?: {}}>) {\n    const t = props.sec;\n\n    return (\n        <>\n            <Time type={\"day\"} sec={t}/>\n            <Time type={\"hour\"} sec={t} styles={props.styles}/>\n            <Time type={\"min\"} sec={t}/>\n            <Time type={\"sec\"} sec={t} styles={props.styles}/>\n        </>\n    );\n}","export type CDObj = {target: Date, title: string, description: string};\nexport enum emailError {ok, existed, format}\nexport type User = {username: string, email: string, list: Array<CDObj>, defaultCd: CDObj | null}","import React, { Component } from 'react';\n\nimport '../stylesheets/style.css';\n\nimport {CDObj} from \"../types/types\";\nimport TimeWrapper from \"./TimeWrapper\";\n\ntype PropsType = { targetDate: CDObj | null}\ntype StateType = { timeRemain: number, test: string }\n\nclass MainDisplay extends Component<PropsType, StateType> {\n\n    private timeId: NodeJS.Timeout | undefined;\n    constructor(props: Readonly<PropsType>) {\n        super(props);\n        this.state = {\n            timeRemain: this.props.targetDate === null ? 0 : this.calculateTimeDiff(this.props.targetDate.target),\n            test: \"\"\n        };\n        this.countdownInterval = this.countdownInterval.bind(this);\n    }\n\n    calculateTimeDiff(target: Date | null): number {\n        if (target === null) return 0;\n        return Math.floor((target.getTime() - new Date().getTime()) / 1000);\n    }\n\n    componentDidMount(): void {\n        if (this.props.targetDate === null) {\n            return;\n        }\n        this.timeId = setInterval(this.countdownInterval, 1000);\n    }\n\n    componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<StateType>, snapshot?: any): void {\n        if (this.props.targetDate === null) return;\n        if (prevProps !== this.props) {\n            if (this.timeId) {\n                clearInterval(this.timeId);\n            }\n            this.timeId = setInterval(this.countdownInterval, 1000);\n        }\n    }\n\n    countdownInterval() {\n        let diff = this.props.targetDate === null ? 0 : this.calculateTimeDiff(this.props.targetDate.target);\n        if (diff <= 0) {\n            diff = 0;\n            this.setState({timeRemain: diff});\n            if (this.timeId) {\n                clearInterval(this.timeId);\n            }\n        }\n        this.setState({timeRemain: diff});\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeId) {\n            clearInterval(this.timeId);\n        }\n    }\n\n    render() {\n        const t = this.state.timeRemain;\n        return (\n            <div>\n                <div className={\"main-countdown\"}>\n                    <TimeWrapper sec={t} styles={{fontSize: \"13vw\", color: \"#4e4e4e\"}}/>\n                </div>\n                <div className={\"main-title\"}>\n                    { this.props.targetDate === null ? \"\" : this.props.targetDate.title }\n                </div>\n                <div className={\"main-desc\"}>\n                    { this.props.targetDate === null ? \"\" : this.props.targetDate.description }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default MainDisplay;","import React, {Component, SyntheticEvent} from 'react';\n\nimport '../stylesheets/style.css';\nimport {CDObj} from \"../types/types\";\nimport TimeWrapper from \"./TimeWrapper\";\n\ntype PropsType = { item: CDObj, handleSwitch: (newTargetDate: CDObj) => void, remove: (title: string) => void};\ntype StateType = { cd: number};\n\nclass CDItem extends Component<PropsType, StateType> {\n    private timeId: NodeJS.Timeout | undefined;\n\n    constructor(props: Readonly<PropsType>) {\n        super(props);\n        this.state = {\n            cd: this.calculateTimeDiff(this.props.item.target),\n        };\n        this.handleRemove = this.handleRemove.bind(this);\n    }\n\n    calculateTimeDiff(target: Date | null): number {\n        if (target === null) return 0;\n        return Math.floor((target.getTime() - new Date().getTime()) / 1000);\n    }\n\n    componentDidMount(): void {\n        this.timeId = setInterval(() => {\n            let diff = this.calculateTimeDiff(this.props.item.target);\n            if (diff <= 0) {\n                diff = 0;\n                this.setState({cd: diff});\n                if (this.timeId) {\n                    clearInterval(this.timeId);\n                }\n            }\n            this.setState({cd: diff});\n        }, 1000);\n    }\n\n    componentWillUnmount(): void {\n        if (this.timeId) {\n            clearInterval(this.timeId);\n        }\n    }\n\n    handleRemove(e: SyntheticEvent) {\n        e.stopPropagation();\n        this.props.remove(this.props.item.title);\n    }\n\n    render(): React.ReactElement | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        return (\n            <li className={\"cd-list-item glass\"} onClick={() => this.props.handleSwitch(this.props.item)}>\n                <div className={\"cd-list-item-content\"}>\n                    <div className={\"title\"}>{this.props.item.title}</div>\n                    <div className={\"cd\"}>\n                        <TimeWrapper sec={this.state.cd} styles={{fontSize: \"15px\"}}/>\n                    </div>\n                </div>\n                <div className={\"remove\"} onClick={this.handleRemove}>-</div>\n            </li>\n        )\n    }\n}\n\nexport default CDItem;","import React, {Component} from 'react';\n\nimport CDItem from \"./CDItem\";\nimport '../stylesheets/style.css';\n\nimport {CDObj} from \"../types/types\";\n\ntype PropsType = { list: Array<CDObj>, handleSwitch: (newTargetDate: CDObj) => void, open: (open: boolean) => void, remove: (title: string) => void };\ntype StateType = { newTitle: string, newDate: Date, newDest: string, expand: boolean };\n\nclass CountDownList extends Component<PropsType, StateType> {\n    constructor(props: Readonly<PropsType>) {\n        super(props);\n        this.state = {\n            newTitle: \"\",\n            newDate: new Date(),\n            newDest: \"\",\n            expand: true,\n        };\n        this.handleOnAddItem = this.handleOnAddItem.bind(this);\n        this.handleChangeDate = this.handleChangeDate.bind(this);\n        this.handleChangeTitle = this.handleChangeTitle.bind(this);\n        this.handleChangeDest = this.handleChangeDest.bind(this);\n        this.handleExpand = this.handleExpand.bind(this);\n    }\n\n    handleOnAddItem(event: React.SyntheticEvent) {\n        this.props.open(true);\n    }\n\n    handleChangeTitle(e: React.ChangeEvent<HTMLInputElement>) {\n        console.log(this.state.newTitle);\n        this.setState({newTitle: e.currentTarget.value})\n    }\n\n    handleChangeDate(e: React.FormEvent<HTMLInputElement>) {\n        this.setState({newDate: new Date(e.currentTarget.value)});\n    }\n\n    handleChangeDest(e: React.FormEvent<HTMLInputElement>) {\n        this.setState({newDest: e.currentTarget.value});\n    }\n\n    handleExpand(e: React.SyntheticEvent) {\n        this.setState({expand: !this.state.expand});\n    }\n\n    render(): React.ReactElement | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        const exp = this.state.expand;\n        return (\n            <div className={\"glass \" + (exp ? \"cd-list-container\" : \"cd-list-container-hide\")}>\n                <span className={\"cd-list-expand\"} onClick={this.handleExpand}>\n                    <svg height={\"30\"} width={\"30\"}>\n                        <text fontSize={\"30\"} fontFamily={\"Fredoka One, cursive;\"} x={\"6\"} y={\"25\"}>\n                            {exp ? \">\" : \"<\"}\n                        </text>\n                    </svg>\n                </span>\n                <span className={\"cd-list\"}>\n                    <ul>\n                        <li className={\"add glass\"} onClick={this.handleOnAddItem}>+</li>\n                        {this.props.list && this.props.list.map((item, idx) => {\n                            return <CDItem key={idx} item={item} handleSwitch={this.props.handleSwitch} remove={this.props.remove}/>\n                        })}\n                    </ul>\n                </span>\n            </div>\n        )\n    }\n}\n\nexport default CountDownList;","import React, {ChangeEvent, Component, SyntheticEvent} from 'react';\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField, FormHelperText} from \"@material-ui/core\";\nimport {emailError} from \"../types/types\";\nimport axios from 'axios';\n\ntype StateType = {email: string, password: string, checkEmail: emailError, error: boolean}\ntype PropsType = {open: boolean, handleOpen: (open: boolean) => void, login: (login: boolean) => void}\n\nclass Login extends Component<PropsType, StateType> {\n    constructor(props: Readonly<PropsType>) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            checkEmail: emailError.ok,\n            error: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleClose() {\n        this.setState({email: \"\", password: \"\", checkEmail: emailError.ok, error: false});\n        this.props.handleOpen(false);\n    }\n\n    handleChange(e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\n        const id = e.target.id;\n        const val = e.target.value;\n        this.setState(ps => ({...ps, [id]: val,}));\n    }\n\n    handleSubmit(e: SyntheticEvent) {\n        e.preventDefault();\n        if (!Login.checkEmailFormat(this.state.email)) {\n            this.setState({checkEmail: emailError.format});\n            return;\n        }\n        axios.post('/login', {\n            email: this.state.email,\n            password: this.state.password,\n        }).then(res => {\n            this.props.login(true);\n            this.handleClose();\n        }).catch(err => {\n            this.setState({error: true});\n        });\n    }\n\n    static checkEmailFormat(email: string): boolean {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    emailErrorMessage() {\n        const checkEmail = this.state.checkEmail;\n        switch (checkEmail) {\n            case emailError.format:\n                return \"Please enter a correct email address\";\n            case emailError.ok:\n                return \"\";\n            default:\n                return \"\";\n        }\n    }\n\n    render() {\n        const open = this.props.open;\n        return (\n            <Dialog open={open} onClose={this.handleClose}>\n                <DialogTitle>Log in</DialogTitle>\n                <form onSubmit={this.handleSubmit}>\n                    <DialogContent>\n                        <TextField\n                            required\n                            error={this.state.checkEmail !== emailError.ok}\n                            margin={\"dense\"}\n                            id={\"email\"}\n                            label={\"Email\"}\n                            type={\"email\"}\n                            fullWidth\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            helperText={this.emailErrorMessage()}\n                        />\n                        <TextField\n                            required\n                            margin={\"dense\"}\n                            id={\"password\"}\n                            label={\"Password\"}\n                            type={\"password\"}\n                            fullWidth\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                        />\n                        <FormHelperText\n                            error={true}\n                            margin={\"dense\"}\n                        >\n                            {this.state.error ? \"Incorrect email or password\" : \"\"}\n                        </FormHelperText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button type={\"submit\"} color=\"primary\">\n                            Log in\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        )\n    }\n}\n\nexport default Login;","import React, {ChangeEvent, Component, SyntheticEvent} from 'react';\nimport axios from 'axios';\nimport {Button, Dialog, DialogActions, DialogContent, DialogTitle, TextField} from \"@material-ui/core\";\nimport {emailError} from \"../types/types\";\n\ntype StateType = {email: string, password: string, confirm: string, username: string, checkEmail: emailError}\ntype PropsType = {open: boolean, handleOpen: (open: boolean) => void, login: (login: boolean) => void}\n\nclass SignUp extends Component<PropsType, StateType> {\n    constructor(props: Readonly<PropsType>) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            confirm: \"\",\n            username: \"\",\n            checkEmail: emailError.ok,\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleClose() {\n        this.setState({email: \"\", password: \"\", confirm: \"\", username: \"\"});\n        this.props.handleOpen(false);\n    }\n\n    handleChange(e: ChangeEvent<HTMLInputElement>): void {\n        const id = e.target.id;\n        const val = e.target.value;\n        if (id === \"email\" ){\n            if (!SignUp.checkEmailFormat(val)) {\n                this.setState({checkEmail: emailError.format});\n            } else {\n                this.setState({checkEmail: emailError.ok});\n            }\n        }\n        this.setState((ps) => ({...ps, [id]: val,}));\n    }\n\n    handleSubmit(e: SyntheticEvent) {\n        e.preventDefault();\n        const data = this.state;\n        if (data.email === \"\" || data.username === \"\" || data.password === \"\") {\n            return;\n        }\n        if (data.password !== data.confirm || data.checkEmail !== emailError.ok) {\n            return;\n        }\n        axios.post(\"/sign-up\", {\n            email: data.email,\n            password: data.password,\n            username: data.username\n        }).then((res) => {\n            this.props.login(true);\n            this.handleClose();\n        }).catch(err => {\n            this.setState({checkEmail: emailError.format});\n        });\n    }\n\n    static checkEmailFormat(email: string): boolean {\n        return /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)\n    }\n\n    emailErrorMessage() {\n        const checkEmail = this.state.checkEmail;\n        switch (checkEmail) {\n            case emailError.existed:\n                return \"Email already existed\";\n            case emailError.format:\n                return \"Please enter a correct email address\";\n            case emailError.ok:\n                return \"\";\n            default:\n                return \"\";\n        }\n    }\n\n    render() {\n        const open = this.props.open;\n        const checkPassword = (this.state.confirm !== \"\" && this.state.password !== this.state.confirm);\n        const checkEmail = this.state.checkEmail;\n        return (\n            <Dialog open={open} onClose={this.handleClose}>\n                <DialogTitle>Log in</DialogTitle>\n                <form onSubmit={this.handleSubmit}>\n                    <DialogContent>\n                        <TextField\n                            required\n                            margin={\"dense\"}\n                            id={\"username\"}\n                            label={\"User name\"}\n                            type={\"text\"}\n                            fullWidth\n                            value={this.state.username}\n                            onChange={this.handleChange}\n                        />\n                        <TextField\n                            required\n                            error={checkEmail !== emailError.ok}\n                            margin={\"dense\"}\n                            id={\"email\"}\n                            label={\"Email\"}\n                            type={\"email\"}\n                            fullWidth\n                            value={this.state.email}\n                            onChange={this.handleChange}\n                            helperText={this.emailErrorMessage()}\n                        />\n                        <TextField\n                            required\n                            margin={\"dense\"}\n                            id={\"password\"}\n                            label={\"Password\"}\n                            type={\"password\"}\n                            fullWidth\n                            value={this.state.password}\n                            onChange={this.handleChange}\n                        />\n                        <TextField\n                            required\n                            error={checkPassword}\n                            margin={\"dense\"}\n                            id={\"confirm\"}\n                            label={\"Confirm password\"}\n                            type={\"password\"}\n                            fullWidth\n                            value={this.state.confirm}\n                            onChange={this.handleChange}\n                            helperText={checkPassword ? \"Password does not match\" : \"\"}\n                        />\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                        <Button type={'submit'} color=\"primary\">\n                            Sign Up\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        )\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Login from './Login';\nimport axios from 'axios';\n\nimport '../stylesheets/style.css';\nimport {Button, List, ListItem, ListItemIcon, ListItemText} from \"@material-ui/core\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport SignUp from \"./SignUp\";\n\ntype StateType = { anchorEl: HTMLImageElement | null, openLogin: boolean, openSignUp: boolean }\ntype PropsType = { hasLogin: boolean, login: (hasLogin: boolean) => void, username: string, email: string }\n\nclass UserIcon extends Component<PropsType, StateType> {\n    constructor(props: Readonly<PropsType>) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            openLogin: false,\n            openSignUp: false,\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = this.handleClose.bind(this);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n\n    handleClick(e: React.MouseEvent<HTMLImageElement>) {\n        this.setState({anchorEl: e.currentTarget});\n    }\n\n    handleClose() {\n        this.setState({anchorEl: null});\n    }\n\n    handleLogout() {\n        axios.get('/logout')\n            .then(res => {\n                this.props.login(false)\n            }).catch(err => {\n                console.log(err);\n        });\n    }\n\n    iconEl() {\n        const open = Boolean(this.state.anchorEl);\n        return (\n            <div>\n                <Avatar onClick={this.handleClick}>{this.props.username.charAt(0)}</Avatar>\n                <Popover open={open}\n                         anchorEl={this.state.anchorEl}\n                         onClose={this.handleClose}\n                         anchorOrigin={{\n                             vertical: \"center\",\n                             horizontal: \"right\",\n                         }}\n                         transformOrigin={{\n                             vertical: \"top\",\n                             horizontal: \"left\",\n                         }}\n                >\n                    <List>\n                        <ListItem button onClick={this.handleLogout}>\n                            <ListItemIcon>\n                                <ExitToAppIcon fontSize={\"small\"}/>\n                            </ListItemIcon>\n                            <ListItemText primary={\"Sign out\"} />\n                        </ListItem>\n                    </List>\n                </Popover>\n            </div>\n        );\n    }\n\n    handleOpenClose(key: string, open: boolean) {\n        this.setState(ps => ({\n            ...ps,\n            [key]: open,\n        }));\n    }\n\n    loginButton() {\n        return (\n            <div>\n                <Button onClick={(e) => {e.stopPropagation(); this.setState({openLogin: true})}}>Log in</Button>\n                <Login open={this.state.openLogin} handleOpen={this.handleOpenClose.bind(this, \"openLogin\")} login={this.props.login}/>\n                <Button onClick={(e) => {e.stopPropagation(); this.setState({openSignUp: true})}}>Sign up</Button>\n                <SignUp open={this.state.openSignUp} handleOpen={this.handleOpenClose.bind(this, \"openSignUp\")} login={this.props.login}/>\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className={\"user-icon\"}>\n                {this.props.hasLogin ? this.iconEl() : this.loginButton()}\n            </div>\n        )\n    }\n}\n\nexport default UserIcon;","import React, {Component, SyntheticEvent} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\ntype PropsType = {title: string, setTitle: (title:string)=>void,\n    date: Date | null, setDate: (date: Date) => void,\n    dest: string, setDest: (dest: string) => void,\n    open: boolean, handleOpenClose: (open: boolean) => void,\n    add: () => void\n}\ntype StateType = {}\n\nclass AddCD extends Component<PropsType, StateType> {\n\n    constructor(props: Readonly<PropsType>) {\n        super(props);\n        this.handleClickClose = this.handleClickClose.bind(this);\n        this.setDateTime = this.setDateTime.bind(this);\n        this.add = this.add.bind(this);\n    }\n\n    handleClickClose() {\n        this.props.handleOpenClose(false);\n    }\n\n    static formatDate(date: Date | null): string {\n        if (date === null) return \"\";\n        let d = date,\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n\n        if (month.length < 2)\n            month = '0' + month;\n        if (day.length < 2)\n            day = '0' + day;\n\n        return [year, month, day].join('-');\n    }\n\n    static formatTime(date: Date | null): string {\n        if (date === null) return \"\";\n        const h = date.getHours();\n        const m = date.getMinutes();\n        return (h < 10 ? \"0\" + h : h) + \":\" + (m < 10 ? \"0\" + m : m);\n    }\n\n    setDateTime(date: string, time: string): void {\n        this.props.setDate(new Date(date + \" \" + time));\n    }\n\n    add(e: SyntheticEvent) {\n        e.preventDefault();\n        this.props.add();\n        this.props.handleOpenClose(false);\n    }\n\n    render(): React.ReactElement | string | number | {} | React.ReactNodeArray | React.ReactPortal | boolean | null | undefined {\n        const open = this.props.open;\n        const title = this.props.title;\n        const date = this.props.date;\n        const dest = this.props.dest;\n        return (\n            <div>\n                <Dialog open={open} onClose={this.handleClickClose}>\n                    <DialogTitle id={\"add-new-countdown\"}>Add new count down</DialogTitle>\n                    <form onSubmit={this.add}>\n                        <DialogContent>\n                            <TextField\n                                autoFocus\n                                margin={\"dense\"}\n                                id={\"title\"}\n                                label={\"Count down for\"}\n                                type={\"text\"}\n                                fullWidth\n                                required\n                                value={title}\n                                onChange={(e) => this.props.setTitle(e.target.value)}\n                            />\n                            <TextField\n                                margin={\"dense\"}\n                                id={\"date\"}\n                                type={\"date\"}\n                                value={AddCD.formatDate(date)}\n                                onChange={(e) => this.setDateTime(e.target.value, AddCD.formatTime(date))}\n                                required\n                            />\n                            <TextField\n                                margin={\"dense\"}\n                                id={\"time\"}\n                                type={\"time\"}\n                                value={AddCD.formatTime(date)}\n                                onChange={(e) => this.setDateTime(AddCD.formatDate(date), e.target.value)}\n                            />\n                            <TextField\n                                margin={\"dense\"}\n                                id={\"dest\"}\n                                type={\"test\"}\n                                label={\"Description\"}\n                                multiline\n                                fullWidth\n                                value={dest}\n                                onChange={(e) => this.props.setDest(e.target.value)}\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClickClose} color={\"primary\"}>\n                                Cancel\n                            </Button>\n                            <Button type={'submit'} color={\"primary\"}>\n                                Ok\n                            </Button>\n                        </DialogActions>\n                    </form>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default AddCD;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport MainDisplay from \"./components/MainDisplay\";\nimport CountDownList from \"./components/CountDownList\";\nimport UserIcon from \"./components/UserIcon\";\n\nimport './stylesheets/style.css';\n\nimport {CDObj, User} from './types/types';\nimport AddCD from \"./components/AddCD\";\n\ntype StateType = { user: User, newCD: CDObj, openAdd: boolean, login: boolean }\nclass App extends Component<{}, StateType> {\n    constructor(props: Readonly<{}>) {\n        super(props);\n        this.state = {\n            user: {\n                username: \"\",\n                email: \"\",\n                list: [],\n                defaultCd: null,\n            },\n            openAdd: false,\n            newCD: {title: \"\", target: new Date(), description: \"\"},\n            login: false\n        };\n        this.handleAddWindow = this.handleAddWindow.bind(this);\n        this.handleAdd = this.handleAdd.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.getData = this.getData.bind(this);\n        this.handleRemove = this.handleRemove.bind(this);\n    }\n\n    componentDidMount(): void {\n        this.getData();\n    }\n\n    getData() {\n        axios.get('/api/get-data')\n            .then(res => {\n                const d = res.data;\n                const defaultCd = d.defaultCd === null ? null : {...d.defaultCd, target: new Date(d.defaultCd.target)};\n                this.setState({\n                    user: {\n                        username: d.username,\n                        email: d.email,\n                        defaultCd: defaultCd,\n                        list: d.cdList.map((item: CDObj) => ({...item, target: new Date(item.target)})),\n                    },\n                    login: d.isLogin\n                });\n            }).catch(err => {\n            console.error(err);\n        });\n    }\n\n    handleAddWindow(open: boolean) {\n        this.setState({openAdd: open, newCD: {title: \"\", target: new Date(), description: \"\"}});\n    }\n\n    async handleSwitchMainDisplay(currTargetDate: CDObj | null, newTargetDate: CDObj) {\n        if (currTargetDate === null) return;\n        const user = this.state.user;\n        const list = user.list.filter(i => i !== newTargetDate);\n        list.push(currTargetDate);\n        this.setState({\n            user: {\n                ...user,\n                list: list,\n                defaultCd: newTargetDate,\n            }\n        });\n        try {\n            await axios.put('/api/add', {item: currTargetDate});\n            await axios.put('/api/remove', {title: newTargetDate.title});\n            await axios.put('/api/set-default', {defaultCd: newTargetDate});\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    async handleAdd() {\n        const user = this.state.user;\n        if (user.defaultCd === null) {\n            this.setState({user: {...user, defaultCd: this.state.newCD}});\n            try {\n                await axios.put('/api/set-default', {defaultCd: this.state.newCD});\n            } catch (e) {\n                console.error(e);\n            }\n            return;\n        }\n        const newList = [...user.list, this.state.newCD];\n        this.setState({user: {...user, list: newList}});\n        try {\n            await axios.put('/api/add', {item: this.state.newCD})\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    handleRemove(title: string) {\n        const newList = this.state.user.list.filter((i) => title !== i.title);\n        this.setState({user: {...this.state.user, list: newList}});\n        axios.put('/api/remove', {\n            title: title\n        }).catch(err => console.error(err));\n    }\n\n    handleLogin(login: boolean) {\n        if (login === true) {\n            this.getData();\n        } else if (login === false) {\n            this.setState({user: {username: \"\", email: \"\", defaultCd: null, list: []}});\n        }\n        this.setState({login: login});\n    }\n\n    render() {\n        const newCD = this.state.newCD;\n        const user = this.state.user;\n        return (\n            <div className={\"app-container\"}>\n                <UserIcon hasLogin={this.state.login} login={this.handleLogin} username={user.username} email={user.email}/>\n                <MainDisplay targetDate={user.defaultCd}/>\n                <CountDownList\n                    list={user.list}\n                    handleSwitch={this.handleSwitchMainDisplay.bind(this, user.defaultCd)}\n                    open={this.handleAddWindow}\n                    remove={this.handleRemove}\n                />\n                <AddCD title={newCD.title}  setTitle={(t) => {this.setState({newCD: {...newCD, title: t}})}}\n                       date={newCD.target} setDate={(d) => {this.setState({newCD: {...newCD, target: d}})}}\n                       dest={newCD.description} setDest={(d) => this.setState({newCD: {...newCD, description: d}})}\n                       open={this.state.openAdd} handleOpenClose={this.handleAddWindow}\n                       add={this.handleAdd}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport App from './App';\n\naxios.defaults.withCredentials = true;\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}